---
import Layout from '../layouts/Layout.astro'
---

<Layout>
  <header class="header">
    <div class="logo">
      <img src="#" alt="RecreadeCode" />
    </div>
    <nav class="navbar">
      <ul>
        <li><a href="Planes.html">Planes</a></li>
        <li><a href="Qsms.html">¿Quiénes somos?</a></li>
        <li><a href="login.html" class="login-btn">Acceder</a></li>
      </ul>
    </nav>
  </header>

  <main>
    <section id="courses">
      <h2>Cursos Disponibles</h2>
      <div
        class="course"
        data-id="1"
        data-name="Curso de Robótica con Arduino"
        data-price="49.99"
      >
        <h3>Curso de Robótica con Arduino</h3>
        <p>Precio: S/.49.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="2"
        data-name="Curso de Electrónica y Prog. Virtual"
        data-price="24.99"
      >
        <h3>Curso de Electrónica y Prog. Virtual</h3>
        <p>Precio: S/.24.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="3"
        data-name="urso de Proyectos con Arduino"
        data-price="29.99"
      >
        <h3>Curso de Proyectos con Arduino</h3>
        <p>Precio: S/. 29.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="4"
        data-name="Curso de Entrenamiento Mental"
        data-price="29.99"
      >
        <h3>Curso de Entrenamiento Mental</h3>
        <p>Precio: S/. 29.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="5"
        data-name="Curso de Intro. a la Robótica"
        data-price="29.99"
      >
        <h3>Curso de Intro. a la Robótica</h3>
        <p>Precio: S/. 29.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="6"
        data-name="Curso de Asincronismo con JS"
        data-price="29.99"
      >
        <h3>Curso de Asincronismo con JS</h3>
        <p>Precio: S/. 29.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>

      <div
        class="course"
        data-id="7"
        data-name="Curso de Prog. de juegos con Scratch y Kodu"
        data-price="29.99"
      >
        <h3>Curso de Prog. de juegos con Scratch y Kodu</h3>
        <p>Precio: S/. 29.99</p>
        <button class="add-to-cart">Agregar al Carrito</button>
      </div>
    </section>

    <section id="cart">
      <h2>Tu Carrito</h2>
      <ul id="cart-items">
        <!-- Aquí se mostrarán los cursos agregados al carrito -->
      </ul>
      <div id="total">
        <p>Total: <span id="total-amount">S/. 0.00</span></p>
      </div>
      <button id="checkout">Comprar</button>
    </section>
  </main>

  <div id="payment-modal" class="hidden">
    <h2>Opciones de Pago</h2>
    <button class="payment-option" data-method-id="1">
      Pago con Tarjeta
    </button>
    <button class="payment-option" data-method-id="2">
      Pago con Billetera Digital
    </button>
    <button id="close-modal">Cancelar</button>
  </div>
</Layout>

<script>
  // @ts-nocheck

  import { toAttributeString } from 'astro/runtime/server/render/util.js'

  const cartItems = []
  const cartElement = document.getElementById('cart-items')
  const totalElement = document.getElementById('total-amount')
  const paymentModal = document.getElementById('payment-modal')

  document.querySelectorAll('.add-to-cart').forEach(button => {
    button.addEventListener('click', addToCart)
  })

  document.getElementById('checkout').addEventListener('click', () => {
    paymentModal.style.display = 'block'
  })

  document.getElementById('close-modal').addEventListener('click', () => {
    paymentModal.style.display = 'none'
  })

  document.querySelectorAll('.payment-option').forEach(option => {
    option.addEventListener('click', async () => {
      // console.log(cartItems.map(({ id }) => id))
      const paymentMethod = option.dataset.methodId
      const user = JSON.parse(localStorage.getItem('token'))
      if (!user) {
        window.location.href = '/login'
        alert('Inicia sesion')
      }

      const payment = {
        user: {
          idUser: user.idUser,
        },
        paymentMethod: {
          id: paymentMethod,
        },
        totalPayment: Number(totalElement?.dataset.total) || 0,
        paymentDetails: cartItems.map(({ id }) => ({ course: { id } })),
      }

      try {
        const response = await fetch('http://localhost:8000/api/payment', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(payment),
        })

        if (!response.ok) {
          throw new Error(`Error: ${response.status}`)
        }

        const result = await response.json()
        // console.log('Login successful:', result)

        alert(`Compra exitosa`)

        // localStorage.setItem('token', JSON.stringify(result))

        // alert('Inicio de sesión exitoso. Bienvenido de nuevo.')
        // window.location.href = '/'
      } catch (error) {
        console.error('Login failed:', error)
        alert('Error al iniciar sesión. Verifica tus credenciales.')
      }

      // alert(`Compra exitosa con ${paymentMethod}`)
      paymentModal.style.display = 'none'
      cartItems.length = 0
      updateCart()
    })
  })

  function addToCart(event) {
    const courseElement = event.target.parentElement
    const courseId = courseElement.getAttribute('data-id')
    const courseName = courseElement.getAttribute('data-name')
    const coursePrice = parseFloat(courseElement.getAttribute('data-price'))

    const existingItem = cartItems.find(item => item.id === courseId)
    if (existingItem) {
      existingItem.quantity += 1
    } else {
      console.log(courseId)
      cartItems.push({
        id: courseId,
        name: courseName,
        price: coursePrice,
        quantity: 1,
      })
    }
    updateCart()
  }

  function updateCart() {
    cartElement.innerHTML = ''
    let total = 0
    cartItems.forEach(item => {
      const li = document.createElement('li')
      li.textContent = `${item.name} - S/.${item.price} x ${item.quantity}`
      const removeButton = document.createElement('button')
      removeButton.textContent = 'Eliminar'
      removeButton.addEventListener('click', () => removeFromCart(item.id))
      li.appendChild(removeButton)
      cartElement.appendChild(li)
      total += item.price
    })
    totalElement?.setAttribute('data-total', total.toFixed(2))
    totalElement.textContent = `S/.${total.toFixed(2)}`
  }

  function removeFromCart(courseId) {
    const itemIndex = cartItems.findIndex(item => item.id === courseId)
    if (itemIndex > -1) {
      cartItems.splice(itemIndex, 1)
    }
    updateCart()
  }
</script>

<style>
  body {
    background-color: #0d0d0d;
    color: #eaeaea;
    font-family: 'Roboto', sans-serif;
    display: flex;
    justify-content: center;
    align-items: center;
    min-height: 100vh;
    flex-direction: column;
    padding: 20px;
  }

  header {
    display: flex; /**/
    text-align: center;
    justify-content: space-between; /**/
    align-items: center; /**/
    background-color: #1f1f1f;
    padding: 20px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.7);
    border-radius: 10px;
    margin-bottom: 40px;
    width: 100%;
  }

  .navbar ul {
    list-style: none;
    display: flex;
    gap: 20px;
  }

  .navbar ul li a {
    color: #ffffff;
    text-decoration: none;
    padding: 10px 20px;
    font-size: 16px;
    border-radius: 5px;
    position: relative;
    z-index: 1;
    transition: color 0.5s ease;
  }

  .navbar ul li a:hover {
    color: #00ffff;
  }

  h1 {
    color: #00ff99;
    font-size: 2.5rem;
    text-shadow:
      0px 0px 10px #00ff99,
      0px 0px 20px #00ff99;
  }

  /* Contenedor principal */
  main {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: flex-start;
    gap: 40px;
    width: 80%;
    max-width: 1200px;
    margin: 0 auto;
  }

  /* Adaptación responsive: En pantallas pequeñas se vuelve a una columna */
  @media (max-width: 768px) {
    main {
      flex-direction: column;
      align-items: center;
    }
  }

  #courses,
  #cart {
    background-color: #1f1f1f;
    padding: 20px;
    border-radius: 15px;
    box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.6);
    width: 45%;
    min-height: 400px;
  }

  /* Adaptación responsive: El ancho de los contenedores será del 100% en pantallas pequeñas */
  @media (max-width: 768px) {
    #courses,
    #cart {
      width: 100%;
      margin-bottom: 20px;
    }
  }

  h2 {
    color: #00ff99;
    font-size: 1.8rem;
    margin-bottom: 20px;
    text-align: center;
    text-shadow: 0px 0px 5px #00ff99;
  }

  /* Estilos para los cursos */
  .course {
    background-color: #292929;
    border-radius: 10px;
    padding: 15px;
    margin-bottom: 20px;
    transition:
      transform 0.3s ease,
      box-shadow 0.3s ease;
    box-shadow: 0px 4px 15px rgba(0, 0, 0, 0.3);
  }

  .course:hover {
    transform: translateY(-5px);
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.7);
  }

  .course h3 {
    color: #eaeaea;
    font-size: 1.4rem;
    margin-bottom: 10px;
  }

  .course p {
    color: #00ff99;
    margin-bottom: 15px;
    font-weight: bold;
  }

  button.add-to-cart {
    background-color: #00ff99;
    color: #000;
    font-weight: bold;
    padding: 10px;
    border: none;
    border-radius: 5px;
    cursor: pointer;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  button.add-to-cart:hover {
    background-color: #00cc7a;
    transform: translateY(-3px);
  }

  /* Carrito de compras */
  #cart-items {
    list-style-type: none;
  }

  #cart-items li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #292929;
    padding: 10px;
    border-radius: 5px;
    margin-bottom: 10px;
  }

  #cart-items li button {
    background-color: #ff005c;
    color: #fff;
    padding: 5px 10px;
    border: none;
    border-radius: 3px;
    cursor: pointer;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  #cart-items li button:hover {
    background-color: #cc004a;
    transform: translateY(-3px);
  }

  /* Total y botón de comprar */
  #total {
    margin-top: 20px;
    text-align: right;
    font-size: 1.2rem;
    font-weight: bold;
    color: #00ff99;
  }

  #checkout {
    background-color: #ff005c;
    color: #fff;
    padding: 10px;
    border: none;
    border-radius: 5px;
    width: 100%;
    cursor: pointer;
    font-size: 1rem;
    font-weight: bold;
    margin-top: 20px;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  #checkout:hover {
    background-color: #cc004a;
    transform: translateY(-3px);
  }

  /* Modal de opciones de pago */
  #payment-modal {
    position: fixed;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    background-color: #1f1f1f;
    padding: 30px;
    border-radius: 15px;
    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.8);
    display: none;
    z-index: 100;
    width: 300px;
    text-align: center;
  }

  #payment-modal h2 {
    color: #00ff99;
    margin-bottom: 20px;
  }

  button.payment-option {
    background-color: #00ff99;
    color: #000;
    font-weight: bold;
    padding: 10px;
    border: none;
    border-radius: 5px;
    margin: 10px 0;
    width: 100%;
    cursor: pointer;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  button.payment-option:hover {
    background-color: #00cc7a;
    transform: translateY(-3px);
  }

  #close-modal {
    background-color: #ff005c;
    color: #fff;
    font-weight: bold;
    padding: 10px;
    border: none;
    border-radius: 5px;
    width: 100%;
    cursor: pointer;
    margin-top: 10px;
    transition:
      background-color 0.3s ease,
      transform 0.3s ease;
  }

  #close-modal:hover {
    background-color: #cc004a;
    transform: translateY(-3px);
  }

  .hidden {
    display: none;
  }
</style>
